//
//  DataHelpers.swift
//  TerminalAPIKit
//
//  Copyright (c) 2022 Adyen N.V.
//

import Foundation

internal extension Data {
    
    /// Creates a new data buffer with securely generated random bytes.
    ///
    /// - Parameter count: The number of randomly generated bytes.
    init?(secureRandomBytesWithCount count: Int) {
        var bytes: [UInt8] = .init(repeating: 0, count: count)
        
        let result = SecRandomCopyBytes(kSecRandomDefault, count, &bytes)
        
        guard result == errSecSuccess else {
            return nil
        }
        
        self = .init(bytes)
    }
    
    /// Performs a bitwise XOR operation on the bytes of the two given data buffers.
    /// The two data buffers must be of the same size.
    ///
    /// - Parameters:
    ///   - lhs: The first data buffer to XOR.
    ///   - rhs: The second data buffer to XOR.
    static func ^(lhs: Data, rhs: Data) -> Data {
        assert(lhs.count == rhs.count, "Data buffers must have an equal size.")
        
        let result = zip(lhs, rhs).map(^)
        
        return Data(result)
    }
    
    /// Returns underlying [UInt8] representation
    var bytes: [UInt8] {
        return [UInt8](self)
    }
    
}
